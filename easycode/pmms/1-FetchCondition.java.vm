$!setting.setFileName($tool.append("Fetch",$fileClass.name, "Condition.java"))

package $tool.append($file.packageName.substring(0,${file.packageName.indexOf("entity")}),
    "request",".",$tool.packageName($fileClass.name));
    #foreach($column in $file.importList.allImportStatements)
        ${column.text}
    #end
import ${fileClass.qualifiedName};
import com.fasterxml.jackson.annotation.JsonProperty;
import com.onestep.pmms.model.message.BasePmmsDataRequest;

import java.util.List;
import java.util.Collection;
import javax.validation.Valid;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import lombok.Data;

@Data
public class Fetch$!{fileClass.name}Condition implements Fetch$!{fileClass.name}ConditionInterface {

    #foreach($column in $entityFields)
        #if(${column.docComment})
            ${column.docComment.text}
        #end
        #if($tool.needBatchQuery($column.name))
            private Collection<$!{tool.unprimitiveType($column.type.name)}> $!{column.name};
        #else
            private $!{tool.unprimitiveType($column.type.name)} $!{column.name};
        #end
        #if($tool.needLikeQuery($column.name))
            private $!{tool.unprimitiveType($column.type.name)} $!{column.name}Key;
        #end
    #end
}
