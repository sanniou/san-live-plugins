##定义初始变量
#set($className = $tool.append($fileClass.name, "Controller"))
#set($entityName = $!{fileClass.name})
#set($serviceName = $tool.append($!tool.decapitalize($!{fileClass.name}),"Service"))
$!setting.setFileName($tool.append($fileClass.name, "Controller.java"))

##拿到主键
#foreach($column in $fileClass.allFields)
    #if(!$column.name.equals("id"))
        #set($pk = $column)
    #end
#end


#set($basePackage = $!{file.packageName.substring(0,${file.packageName.indexOf(".model")})})
package ${basePackage}.controller;


import $!{basePackage}.model.request.DeleteDataRequest;
import $!{basePackage}.model.entity.$!{entityName};
import $!{basePackage}.service.$!{entityName}Service;
import $!{basePackage}.model.request.$tool.packageName($fileClass.name).*;
import $!{basePackage}.model.response.SaveResponse;
import $!{basePackage}.model.response.SaveAllResponse;
import $!{basePackage}.model.response.TotalResponse;
import com.onestep.pmms.controller.PMMSController;
import com.onestep.pmms.model.message.BasePmmsDataRequest;
import com.onestep.pmms.model.message.PmmsResponse;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;

@RestController
@RequestMapping("/$!tool.controllerApiName($!{className})")
@Api(value = todo)
public class $!{className} implements PMMSController {


    @Autowired
    private $!{entityName}Service $!{serviceName};


    @PostMapping("/save$!{entityName}List")
    @ApiOperation(value = "save$!{entityName}List")
    public PmmsResponse<SaveAllResponse> save$!{entityName}List(
            @RequestBody @Validated Save$!{entityName}ListRequest request) {
        return tryFunction(request, () -> $!{serviceName}.save$!{entityName}List(request));
    }

    @PostMapping("/fetch$!{entityName}List")
    @ApiOperation(value = "fetch$!{entityName}List")
    public PmmsResponse<TotalResponse<$!{entityName}>> fetch$!{entityName}List(
            @RequestBody @Validated Fetch$!{entityName}ListRequest request) {
        return tryFunction(request, () -> $!{serviceName}.fetch$!{entityName}List(request));
    }

    @PostMapping("/fetch$!{entityName}GroupFiledList")
    @ApiOperation(value = "fetch$!{entityName}GroupFiledList")
    public PmmsResponse<TotalResponse> fetch$!{entityName}GroupFiledList(
            @RequestBody @Validated Fetch$!{entityName}GroupFiledRequest request) {
        return tryFunction(request, () -> $!{serviceName}.fetch$!{entityName}GroupFiledList(request));
    }

    @PostMapping("/delete$!{entityName}")
    @ApiOperation(value = "delete$!{entityName}")
    public PmmsResponse<Void> delete$!{entityName}(
            @RequestBody @Validated DeleteDataRequest request) {
        return tryConsumer(request, () -> $!{serviceName}.delete$!{entityName}(request));
    }

    @PostMapping("/delete$!{entityName}ByQuery")
    @ApiOperation(value = "delete$!{entityName}ByQuery")
    public PmmsResponse<Long> delete$!{entityName}ByQuery(
            @RequestBody @Validated Delete$!{entityName}Request request) {
        return tryFunction(request, () -> $!{serviceName}.delete$!{entityName}ByQuery(request));
    }

    @PostMapping("/update$!{entityName}ByQuery")
    @ApiOperation(value = "update$!{entityName}ByQuery")
    public PmmsResponse<Long> update$!{entityName}ByQuery(
            @RequestBody @Validated Update$!{entityName}Request request) {
        return tryFunction(request, () -> $!{serviceName}.update$!{entityName}ByQuery(request));
    }
}
