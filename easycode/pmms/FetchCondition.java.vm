$!setting.setFileName($tool.append("Fetch",$fileClass.name, "Condition.java"))

package $tool.append($file.packageName.substring(0,${file.packageName.indexOf("entity")}),
    "request",".",$tool.packageName($fileClass.name));
    #foreach($column in $file.importList.allImportStatements)
        ${column.text}
    #end
import ${fileClass.qualifiedName};
import com.fasterxml.jackson.annotation.JsonProperty;
import com.onestep.pmms.model.message.BasePmmsDataRequest;

import java.util.List;
import java.util.Collection;
import javax.validation.Valid;
import javax.validation.constraints.NotEmpty;
import javax.validation.constraints.NotNull;

import lombok.Data;

@Data
public class Fetch$!{fileClass.name}Condition implements Fetch$!{fileClass.name}ConditionInterface {

    #foreach($column in $fileClass.allFields)
        #if(!$tool.match($column.name, "^(update|delete|create).*$")&&!${column.hasModifierProperty("static")})
            #if(${column.docComment})
                ${column.docComment.text}
            #end
            #if($tool.contains($column.name, "id")
            ||$tool.contains($column.name, "Id")
            ||$tool.contains($column.name, "status")
            ||$tool.contains($column.name, "Status")
            )
                private Collection<$!{column.type.name}> $!{column.name};
            #else
                private $!{column.type.name} $!{column.name};
            #end
        #end
    #end
}